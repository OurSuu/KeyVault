<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>KeyVault | Main Menu</title>

  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="mainStyle.css">
</head>

<body class="min-h-screen flex flex-col items-center justify-center text-white">

  <div id="background-layer"></div>

  <!-- Main Card -->
  <div class="main-card glass-card p-10 rounded-3xl shadow-2xl w-11/12 max-w-4xl animate-fadein">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-3xl font-bold text-blue-300 tracking-wide">KeyVault</h1>
      <div class="flex gap-2">
        <button id="add-category-btn" class="btn-primary px-4 py-2 text-sm">+ เพิ่มหมวดหมู่</button>
        <button id="logout-btn" class="btn-secondary px-4 py-2 text-sm">Log out</button>
      </div>
    </div>

    <!-- Filter Section -->
    <div class="flex flex-wrap gap-2 mb-6" id="category-filters">
      <button class="filter-btn active" data-category="all">ทั้งหมด</button>
      <!-- หมวดหมู่จะถูกเพิ่มโดย JavaScript -->
    </div>

    <!-- Loading State -->
    <div id="loading-state" class="text-center py-8">
      <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-400"></div>
      <p class="text-gray-300 mt-2">กำลังโหลดข้อมูล...</p>
    </div>

    <!-- Code List -->
    <div id="code-list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
      <!-- ข้อมูลจะถูกเพิ่มโดย JavaScript -->
    </div>

    <!-- Add Code Button -->
    <div class="flex justify-center mt-8">
      <button id="add-code-btn" class="btn-secondary px-5 py-2">+ เพิ่มรหัสใหม่</button>
    </div>
  </div>

  <script src="mainScript.js"></script>
  <script>
    // ตรวจสอบ token อย่างมั่นคงกับ server ก่อนให้เข้าใช้งาน main หน้า
    document.addEventListener('DOMContentLoaded', function() {
      const authToken = localStorage.getItem('authToken');
      const userRaw = localStorage.getItem('user');
      // ถ้าไม่มี token (หรือ token ว่าง) ให้เด้งไป login
      if (!authToken || typeof authToken !== "string" || !authToken.trim()) {
        localStorage.removeItem('authToken');
        localStorage.removeItem('user');
        window.location.href = '/';
        return;
      }

      // ตรวจสอบ token กับ server (server จะ reject หาก token ไม่ valid หรือ user ไม่เจอ)
      fetch('/api/debug/auth', {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${authToken}`
        }
      })
      .then(async (response) => {
        // ถ้าไม่ได้ 200 แปลว่า token หมดอายุ/ผิด/ถูกเพิกถอน
        if (!response.ok) throw new Error('Token validation failed');
        // เช็คว่าข้อมูล user กับ token ตรงกันมั้ย
        const data = await response.json();
        if (!data || typeof data !== "object" || !data.userId) throw new Error('No userId in token validation response');
        // ถ้ามีแสดงตัวผู้ใช้ อัพเดตใน localStorage ด้วย (backup กัน session หลุด sync)
        if (data.user) {
          localStorage.setItem('user', JSON.stringify(data.user));
        }
        // log ว่า user ผ่าน
        console.log('Token is valid:', data);
        // ไม่ต้อง redirect ทำงานต่อได้
      })
      .catch(error => {
        // token ไม่ valid, ลบออกและ redirect
        console.error('Token validation error:', error);
        localStorage.removeItem('authToken');
        localStorage.removeItem('user');
        window.location.href = '/';
      });

      // Log out
      const logoutBtn = document.getElementById('logout-btn');
      if (logoutBtn) {
        logoutBtn.addEventListener('click', function() {
          localStorage.removeItem('authToken');
          localStorage.removeItem('user');
          window.location.href = '/';
        });
      }
    });
  </script>
</body>
</html>